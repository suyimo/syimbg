(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{511:function(s,n,a){"use strict";a.r(n);var t=a(6),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git config --global credential.helper osxkeychain\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("默认git clone 会使用钥匙串第一个，如果多账号使用，\n使用git clone http://username:password@host/xxx.git 直接下载，会同步账号密码到钥匙串\n使用git clone http://username@host/xxx.git 会到钥匙串根据账号获取密码")]),s._v(" "),a("h1",{attrs:{id:"pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[s._v("#")]),s._v(" pod")]),s._v(" "),a("p",[s._v("打包机 iOS项目中，如果依赖的库使用源码方式从仓库拉取，会存在钥匙串首个账号密码无权限拉取，导致pod install失败")]),s._v(" "),a("p",[s._v("解决方法：")]),s._v(" "),a("ol",[a("li",[s._v("所有库都指定账号，使用http://password@host/xxx.git 指定账号， 这个方法的问题是在别人的电脑上，需要有库中指定的账密，一个项目会有多个开发，不方便")]),s._v(" "),a("li",[s._v("覆写cocoapods download下载逻辑，在下载时，尝试使用当前电脑上所有账密。")])]),s._v(" "),a("p",[s._v("方法2相对来说更好一些")]),s._v(" "),a("p",[s._v("覆盖逻辑")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('def initialize(target_path, url, options)\n        require \'pathname\'\n        @target_path = Pathname.new(target_path)\n        new_url=`sh $HOME/pod_repo_url.sh "#{url}"`\n        puts "start init pod download"\n        if new_url.length > 0\n          new_url["\\n"]=""\n          # puts "#{new_url} back; print the current url;"\n          url = new_url\n        end\n        @url = url\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("获取git账号逻辑")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/usr/bin/env bash\nurl="$1"\nback_url=$1\nurl=${url#*//}\ngit_account="$(cat ~/.git_pwd)"\n\nfunction access_repo() {\n    a=`git ls-remote -h -- "$1" HEAD`\n    if [ $? -ne 0 ]; then\n        echo "1"\n    else\n        echo "0"\n    fi\n}\n\ngitlab_tag="gitlab.yundasys.com:8090"\nif [[ $back_url == *$gitlab_tag* ]]; then\n    for account in $(cat ~/.git_pwd); do\n        new_url="http://$account@$url"\n        result="$(access_repo $new_url)"\n        if [ "$result" = "0" ]; then\n            back_url=$new_url\n            break\n        fi\n    \n    done\n    echo "$back_url"\nelse\n    echo "$1"\nfi\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h1",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.freesion.com/article/84381131357/#33__73",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.freesion.com/article/84381131357/#33__73"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://debugtalk.com/post/head-first-git-authority-verification/",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入浅出 Git 权限校验"),a("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);